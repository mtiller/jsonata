yarn run v1.3.2
$ jest
FAIL __tests__/implementation-tests.ts
  ● Functions with side-effects › Evaluator - function: millis › $millis() returns milliseconds since the epoch › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at Object.ast_optimize (src/parser/optimize.ts:162:32)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:94:28)

  ● Functions with side-effects › Evaluator - function: millis › $millis() always returns same value within an expression › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:144:29
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:143:43)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:104:28)

  ● Functions with side-effects › Evaluator - function: millis › $millis() returns different timestamp for subsequent evaluate() calls › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at ast_optimize (src/parser/optimize.ts:130:34)
      at src/parser/optimize.ts:139:28
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:138:55)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at src/parser/optimize.ts:195:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:194:68)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:113:28)

  ● Functions with side-effects › $now() returns timestamp › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at Object.ast_optimize (src/parser/optimize.ts:162:32)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:123:24)

  ● Functions with side-effects › $now() always returns same value within an expression › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:144:29
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:143:43)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:134:24)

  ● Functions with side-effects › $now() returns different timestamp for subsequent evaluate() calls › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at ast_optimize (src/parser/optimize.ts:130:34)
      at src/parser/optimize.ts:139:28
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:138:55)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at src/parser/optimize.ts:195:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:194:68)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:143:24)

  ● Functions with side-effects › $millis() returns milliseconds since the epoch › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at Object.ast_optimize (src/parser/optimize.ts:162:32)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:152:24)

  ● Functions with side-effects › Evaluator - functions: random › random number") › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at Object.ast_optimize (src/parser/optimize.ts:162:32)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:163:28)

  ● Functions with side-effects › Evaluator - functions: random › consequetive random numbers should be different") › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at ast_optimize (src/parser/optimize.ts:162:32)
      at Object.ast_optimize (src/parser/optimize.ts:130:34)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:172:28)

  ● Tests that bind Javascript functions › transform expression with overridden $clone function › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at Object.ast_optimize (src/parser/optimize.ts:125:34)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:184:24)

  ● Tests that bind Javascript functions › Override implementation of $now() › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at Object.ast_optimize (src/parser/optimize.ts:162:32)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:212:24)

  ● Tests that bind Javascript functions › map a user-defined Javascript function with signature › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:139:28
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:138:55)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:223:24)

  ● Tests that bind Javascript functions › map a user-defined Javascript function with undefined signature › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:139:28
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:138:55)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:238:24)

  ● Tests that bind Javascript functions › map a user-defined Javascript function › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:139:28
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:138:55)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:250:24)

  ● Tests that bind Javascript functions › Partially apply user-defined Javascript function › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at ast_optimize (src/parser/optimize.ts:120:34)
      at src/parser/optimize.ts:195:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:194:68)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:261:24)

  ● Tests that are specific to a Javascript runtime › /ab/ ("ab") › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:282:24)

  ● Tests that are specific to a Javascript runtime › /ab/ () › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at Object.ast_optimize (src/parser/optimize.ts:162:32)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:291:24)

  ● Tests that are specific to a Javascript runtime › /ab+/ ("ababbabbcc") › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:300:24)

  ● Tests that are specific to a Javascript runtime › /a(b+)/ ("ababbabbcc") › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:309:24)

  ● Tests that are specific to a Javascript runtime › /a(b+)/ ("ababbabbcc").next() › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:318:24)

  ● Tests that are specific to a Javascript runtime › /a(b+)/ ("ababbabbcc").next().next() › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:327:24)

  ● Tests that are specific to a Javascript runtime › /a(b+)/ ("ababbabbcc").next().next().next() › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:336:24)

  ● Tests that are specific to a Javascript runtime › /a(b+)/i ("Ababbabbcc") › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:345:24)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("ababbabbcc",/ab/) › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:373:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("ababbabbcc",/a(b+)/) › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:390:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("ababbabbcc",/a(b+)/, 1) › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:407:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("ababbabbcc",/a(b+)/, 0) › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:416:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match(nothing,/a(xb+)/) › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:425:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("ababbabbcc",/a(xb+)/) › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:434:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("a, b, c, d", /ab/, -3) › should throw error

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:443:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("a, b, c, d", /ab/, null) › should throw error

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:452:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("a, b, c, d", /ab/, "2") › should throw error

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:461:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("a, b, c, d", "ab") › should throw error

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:470:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match("a, b, c, d", true) › should throw error

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:479:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match(12345, 3) › should throw error

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:488:28)

  ● Tests that are specific to a Javascript runtime › Functions - $match › $match(12345) › should throw error

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:497:28)

  ● Test that yield platform specific results › $sqrt(10) * $sqrt(10) › should return result object

    [object Object] thrown

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at Object.ast_optimize (src/parser/optimize.ts:130:34)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Object.<anonymous> (__tests__/implementation-tests.ts:510:24)

  ● Tests that include infinite recursion › stack overflow - infinite recursive function - non-tail call › should throw error

    expect(received).toEqual(expected)
    
    Expected value to equal:
      46
    Received:
      38

      546 |     } catch(e) {
      547 |         Object.keys(fields).forEach((key) => {
    > 548 |             expect(e[key]).toEqual(fields[key]);
      549 |         });
      550 |         error = true;
      551 |     }
      
      at Object.keys.forEach (__tests__/implementation-tests.ts:548:28)
      at Array.forEach (native)
      at expectError (__tests__/implementation-tests.ts:547:29)
      at Object.<anonymous> (__tests__/implementation-tests.ts:521:13)

  ● Tests that include infinite recursion › stack overflow - infinite recursive function - tail call › should throw error

    expect(received).toEqual(expected)
    
    Expected value to equal:
      37
    Received:
      29

      546 |     } catch(e) {
      547 |         Object.keys(fields).forEach((key) => {
    > 548 |             expect(e[key]).toEqual(fields[key]);
      549 |         });
      550 |         error = true;
      551 |     }
      
      at Object.keys.forEach (__tests__/implementation-tests.ts:548:28)
      at Array.forEach (native)
      at expectError (__tests__/implementation-tests.ts:547:29)
      at Object.<anonymous> (__tests__/implementation-tests.ts:532:13)

FAIL __tests__/parser-recovery.ts
  ● Invoke parser with valid expression › Account.Order[0] › should return ast

    assert.deepEqual(received, expected)
    
    Expected value to deeply equal to:
      {"steps": [{"position": 7, "type": "name", "value": "Account"}, {"position": 13, "predicate": [{"position": 15, "type": "literal", "value": 0}], "type": "name", "value": "Order"}], "type": "path"}
    Received:
      {"steps": [{"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "type": "error"}, {"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "predicate": [{"error": {"code": "S0206", "position": undefined, "token": "(literal)"}, "type": "error"}], "type": "error"}], "type": "path"}
    
    Difference:
    
    - Expected
    + Received
    
      Object {
        "steps": Array [
          Object {
    -       "position": 7,
    -       "type": "name",
    -       "value": "Account",
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
            },
    +       "type": "error",
    +     },
          Object {
    -       "position": 13,
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
    +       },
            "predicate": Array [
              Object {
    -           "position": 15,
    -           "type": "literal",
    -           "value": 0,
    +           "error": Object {
    +             "code": "S0206",
    +             "position": undefined,
    +             "token": "(literal)",
                },
    +           "type": "error",
    +         },
            ],
    -       "type": "name",
    -       "value": "Order",
    +       "type": "error",
          },
        ],
        "type": "path",
      }
      steps: 
       [ { type: 'error', error: [Object] },
         { type: 'error', error: [Object], predicate: [Object] }  deepEqual { type: 'path',
      steps: 
       [ { value: 'Account', type: 'name', position: 7 },
         { value: 'Order',
           type: 'name',

      31 |                 ]
      32 |             };
    > 33 |             var errors = expr.errors();
      34 |             var expected_errors = undefined;
      35 |             assert.deepEqual(ast, expected_ast);
      36 |             assert.deepEqual(errors, expected_errors);
      
          
      at Object.<anonymous> (__tests__/parser-recovery.ts:33:20)

  ● Invoke parser with incomplete expression › Account. › should return ast

    assert.deepEqual(received, expected)
    
    Expected value to deeply equal to:
      {"steps": [{"position": 7, "type": "name", "value": "Account"}, {"error": {"code": "S0207", "position": 8, "token": "(end)"}, "type": "error"}], "type": "path"}
    Received:
      {"steps": [{"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "type": "error"}, {"error": {"code": "S0206", "position": undefined, "token": "(end)"}, "type": "error"}], "type": "path"}
    
    Difference:
    
    - Expected
    + Received
    
      Object {
        "steps": Array [
          Object {
    -       "position": 7,
    -       "type": "name",
    -       "value": "Account",
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
            },
    +       "type": "error",
    +     },
          Object {
            "error": Object {
    -         "code": "S0207",
    -         "position": 8,
    +         "code": "S0206",
    +         "position": undefined,
              "token": "(end)",
            },
            "type": "error",
          },
        ],
        "type": "path",
      }
      steps: 
       [ { type: 'error', error: [Object] },
         { type: 'error', error: [Object] } ] } deepEqual { type: 'path',
      steps: 
       [ { value: 'Account', type: 'name', position: 7 },
         { type: 'error', error: [Object] } ] }

      67 |                     "code": "S0207",
      68 |                     "position": 8,
    > 69 |                     "token": "(end)"
      70 |                 }
      71 |             ];
      72 |             assert.deepEqual(ast, expected_ast);
      
      at Object.<anonymous> (__tests__/parser-recovery.ts:69:20)

  ● Invoke parser with incomplete expression › Account[ › should return ast

    assert.deepEqual(received, expected)
    
    Expected value to deeply equal to:
      {"steps": [{"position": 7, "predicate": [{"error": {"code": "S0207", "position": 8, "token": "(end)"}, "type": "error"}], "type": "name", "value": "Account"}], "type": "path"}
    Received:
      {"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "predicate": [{"error": {"code": "S0206", "position": undefined, "token": "(end)"}, "type": "error"}], "type": "error"}
    
    Difference:
    
    - Expected
    + Received
    
      Object {
    -   "steps": Array [
    -     Object {
    -       "position": 7,
    +   "error": Object {
    +     "code": "S0206",
    +     "position": undefined,
    +     "token": "(name)",
    +   },
        "predicate": Array [
          Object {
            "error": Object {
    -             "code": "S0207",
    -             "position": 8,
    +         "code": "S0206",
    +         "position": undefined,
              "token": "(end)",
            },
            "type": "error",
          },
        ],
    -       "type": "name",
    -       "value": "Account",
    -     },
    -   ],
    -   "type": "path",
    +   "type": "error",
      }
      error: { code: 'S0206', position: undefined, token: '(name)' },
      predicate: [ { type: 'error', error: [Objec deepEqual { type: 'path',
      steps: 
       [ { value: 'Account',
           type: 'name',
           position: 7,
           predicate: [Object] } ] }

      110 |                 {
      111 |                     "code": "S0207",
    > 112 |                     "position": 8,
      113 |                     "token": "(end)"
      114 |                 }
      115 |             ];
      
      at Object.<anonymous> (__tests__/parser-recovery.ts:112:20)

  ● Invoke parser with incomplete expression › Account.Order[;0].Product › should return ast

    assert.deepEqual(received, expected)
    
    Expected value to deeply equal to:
      {"steps": [{"position": 7, "type": "name", "value": "Account"}, {"position": 13, "predicate": [{"code": "S0211", "position": 15, "remaining": [{"position": 16, "type": "literal", "value": 0}, {"position": 17, "type": "operator", "value": "]"}, {"position": 18, "type": "operator", "value": "."}, {"position": 25, "type": "name", "value": "Product"}], "token": ";", "type": "error"}], "type": "name", "value": "Order"}], "type": "path"}
    Received:
      {"steps": [{"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "type": "error"}, {"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "predicate": [{"code": "S0211", "position": 15, "remaining": [{"position": 16, "type": "literal", "value": 0}, {"position": 17, "type": "operator", "value": "]"}, {"position": 18, "type": "operator", "value": "."}, {"position": 25, "type": "name", "value": "Product"}], "token": ";", "type": "error"}], "type": "error"}], "type": "path"}
    
    Difference:
    
    - Expected
    + Received
    
      Object {
        "steps": Array [
          Object {
    -       "position": 7,
    -       "type": "name",
    -       "value": "Account",
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
            },
    +       "type": "error",
    +     },
          Object {
    -       "position": 13,
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
    +       },
            "predicate": Array [
              Object {
                "code": "S0211",
                "position": 15,
                "remaining": Array [
                  Object {
                    "position": 16,
                    "type": "literal",
                    "value": 0,
                  },
                  Object {
                    "position": 17,
                    "type": "operator",
                    "value": "]",
                  },
                  Object {
                    "position": 18,
                    "type": "operator",
                    "value": ".",
                  },
                  Object {
                    "position": 25,
                    "type": "name",
                    "value": "Product",
                  },
                ],
                "token": ";",
                "type": "error",
              },
            ],
    -       "type": "name",
    -       "value": "Order",
    +       "type": "error",
          },
        ],
        "type": "path",
      }
      steps: 
       [ { type: 'error', error: [Object] },
         { type: 'error', error: [Object], predicate: [Object] }  deepEqual { type: 'path',
      steps: 
       [ { value: 'Account', type: 'name', position: 7 },
         { value: 'Order',
           type: 'name',

      175 |                             "value": 0,
      176 |                             "type": "literal",
    > 177 |                             "position": 16
      178 |                         }
      179 |                     ]
      180 |                 }
      
          
      at Object.<anonymous> (__tests__/parser-recovery.ts:177:20)

  ● Invoke parser with incomplete expression › Account.Order[0;].Product › should return ast

    assert.deepEqual(received, expected)
    
    Expected value to deeply equal to:
      {"steps": [{"position": 7, "type": "name", "value": "Account"}, {"position": 13, "predicate": [{"position": 15, "type": "literal", "value": 0}], "type": "name", "value": "Order"}], "type": "path"}
    Received:
      {"steps": [{"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "type": "error"}, {"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "predicate": [{"error": {"code": "S0206", "position": undefined, "token": "(literal)"}, "type": "error"}], "type": "error"}], "type": "path"}
    
    Difference:
    
    - Expected
    + Received
    
      Object {
        "steps": Array [
          Object {
    -       "position": 7,
    -       "type": "name",
    -       "value": "Account",
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
            },
    +       "type": "error",
    +     },
          Object {
    -       "position": 13,
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
    +       },
            "predicate": Array [
              Object {
    -           "position": 15,
    -           "type": "literal",
    -           "value": 0,
    +           "error": Object {
    +             "code": "S0206",
    +             "position": undefined,
    +             "token": "(literal)",
                },
    +           "type": "error",
    +         },
            ],
    -       "type": "name",
    -       "value": "Order",
    +       "type": "error",
          },
        ],
        "type": "path",
      }
      steps: 
       [ { type: 'error', error: [Object] },
         { type: 'error', error: [Object], predicate: [Object] }  deepEqual { type: 'path',
      steps: 
       [ { value: 'Account', type: 'name', position: 7 },
         { value: 'Order',
           type: 'name',

      220 |                     "remaining": [
      221 |                         {"value": ";", "type": "operator", "position": 16},
    > 222 |                         {"type": "operator", "value": "]", "position": 17},
      223 |                         {"type": "operator", "value": ".", "position": 18},
      224 |                         {"type": "name", "value": "Product", "position": 25}
      225 |                     ]
      
          
      at Object.<anonymous> (__tests__/parser-recovery.ts:222:20)

  ● Invoke parser with incomplete expression › Account.Order[0].Product; › should return ast

    assert.deepEqual(received, expected)
    
    Expected value to deeply equal to:
      {"steps": [{"position": 7, "type": "name", "value": "Account"}, {"position": 13, "predicate": [{"position": 15, "type": "literal", "value": 0}], "type": "name", "value": "Order"}, {"position": 24, "type": "name", "value": "Product"}], "type": "path"}
    Received:
      {"steps": [{"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "type": "error"}, {"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "predicate": [{"error": {"code": "S0206", "position": undefined, "token": "(literal)"}, "type": "error"}], "type": "error"}, {"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "type": "error"}], "type": "path"}
    
    Difference:
    
    - Expected
    + Received
    
      Object {
        "steps": Array [
          Object {
    -       "position": 7,
    -       "type": "name",
    -       "value": "Account",
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
            },
    +       "type": "error",
    +     },
          Object {
    -       "position": 13,
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
    +       },
            "predicate": Array [
              Object {
    -           "position": 15,
    -           "type": "literal",
    -           "value": 0,
    +           "error": Object {
    +             "code": "S0206",
    +             "position": undefined,
    +             "token": "(literal)",
                },
    +           "type": "error",
    +         },
            ],
    -       "type": "name",
    -       "value": "Order",
    +       "type": "error",
          },
          Object {
    -       "position": 24,
    -       "type": "name",
    -       "value": "Product",
    +       "error": Object {
    +         "code": "S0206",
    +         "position": undefined,
    +         "token": "(name)",
            },
    +       "type": "error",
    +     },
        ],
        "type": "path",
      }
      steps: 
       [ { type: 'error', error: [Object] },
         { type: 'error', error: [Object], predicate: [Object] }, deepEqual { type: 'path',
      steps: 
       [ { value: 'Account', type: 'name', position: 7 },
         { value: 'Order',
           type: 'name',

      270 |                         {
      271 |                             "position": 25,
    > 272 |                             "type": "operator",
      273 |                             "value": ";"
      274 |                         }
      275 |                     ],
      
          
      at Object.<anonymous> (__tests__/parser-recovery.ts:272:20)

  ● Invoke parser with incomplete expression › $equals3lucy[0].UnstructuredAnswers^()[0].Text › should return ast

    assert.deepEqual(received, expected)
    
    Expected value to deeply equal to:
      {"lhs": {"steps": [{"position": 12, "predicate": [{"position": 14, "type": "literal", "value": 0}], "type": "variable", "value": "equals3lucy"}, {"position": 35, "type": "name", "value": "UnstructuredAnswers"}], "type": "path"}, "position": 36, "rhs": [{"descending": false, "expression": {"code": "S0211", "position": 38, "predicate": [{"error": {"code": "S0207", "position": 46, "token": "(end)"}, "type": "error"}], "remaining": [{"position": 39, "type": "operator", "value": "["}, {"position": 40, "type": "number", "value": 0}, {"position": 41, "type": "operator", "value": "]"}, {"position": 42, "type": "operator", "value": "."}, {"position": 46, "type": "name", "value": "Text"}], "token": ")", "type": "error"}}], "type": "sort", "value": "^"}
    Received:
      {"lhs": {"steps": [{"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "predicate": [{"error": {"code": "S0206", "position": undefined, "token": "(literal)"}, "type": "error"}], "type": "error"}, {"error": {"code": "S0206", "position": undefined, "token": "(name)"}, "type": "error"}], "type": "path"}, "position": 36, "rhs": [{"descending": false, "expression": {"code": "S0211", "position": 38, "predicate": [{"error": {"code": "S0206", "position": undefined, "token": "(end)"}, "type": "error"}], "remaining": [{"position": 39, "type": "operator", "value": "["}, {"position": 40, "type": "number", "value": 0}, {"position": 41, "type": "operator", "value": "]"}, {"position": 42, "type": "operator", "value": "."}, {"position": 46, "type": "name", "value": "Text"}], "token": ")", "type": "error"}}], "type": "sort", "value": "^"}
    
    Difference:
    
    - Expected
    + Received
    
      Object {
        "lhs": Object {
          "steps": Array [
            Object {
    -         "position": 12,
    +         "error": Object {
    +           "code": "S0206",
    +           "position": undefined,
    +           "token": "(name)",
    +         },
              "predicate": Array [
                Object {
    -             "position": 14,
    -             "type": "literal",
    -             "value": 0,
    +             "error": Object {
    +               "code": "S0206",
    +               "position": undefined,
    +               "token": "(literal)",
                  },
    +             "type": "error",
    +           },
              ],
    -         "type": "variable",
    -         "value": "equals3lucy",
    +         "type": "error",
            },
            Object {
    -         "position": 35,
    -         "type": "name",
    -         "value": "UnstructuredAnswers",
    +         "error": Object {
    +           "code": "S0206",
    +           "position": undefined,
    +           "token": "(name)",
              },
    +         "type": "error",
    +       },
          ],
          "type": "path",
        },
        "position": 36,
        "rhs": Array [
          Object {
            "descending": false,
            "expression": Object {
              "code": "S0211",
              "position": 38,
              "predicate": Array [
                Object {
                  "error": Object {
    -               "code": "S0207",
    -               "position": 46,
    +               "code": "S0206",
    +               "position": undefined,
                    "token": "(end)",
                  },
                  "type": "error",
                },
              ],
              "remaining": Array [
                Object {
                  "position": 39,
                  "type": "operator",
                  "value": "[",
                },
                Object {
                  "position": 40,
                  "type": "number",
                  "value": 0,
                },
                Object {
                  "position": 41,
                  "type": "operator",
                  "value": "]",
                },
                Object {
                  "position": 42,
                  "type": "operator",
                  "value": ".",
                },
                Object {
                  "position": 46,
                  "type": "name",
                  "value": "Text",
                },
              ],
              "token": ")",
              "type": "error",
            },
          },
        ],
        "type": "sort",
        "value": "^",
      }
      value: '^',
      position: 36,
      lhs: { type: 'path', steps: [ [Object], [Object] ] },
      rhs: [ { descending: fal deepEqual { type: 'sort',
      value: '^',
      position: 36,
      lhs: { type: 'path', steps: [ [Object], [Object] ] },
      rhs: [ { descending: fal

      418 |                     "remaining": [],
      419 |                     "token": "(end)",
    > 420 |                     "value": ")"
      421 |                 },
      422 |                 {
      423 |                     "code": "S0207",
      
      at Object.<anonymous> (__tests__/parser-recovery.ts:420:20)

FAIL __tests__/async-function.ts
  ● Invoke JSONata with callback › Make HTTP request › should return promise to results

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at Object.ast_optimize (src/parser/optimize.ts:89:30)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:30:24)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:29:59)

  ● Invoke JSONata with callback - errors › type error › should throw

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at Object.ast_optimize (src/parser/optimize.ts:130:34)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:50:24)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:49:39)

  ● Invoke JSONata with callback - errors › Make HTTP request with dodgy url › should throw

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at Object.ast_optimize (src/parser/optimize.ts:89:30)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:64:24)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:63:39)

  ● Invoke JSONata with callback - return values › should handle an undefined value

    Failed: Unknown expression type: "(name)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at Object.ast_optimize (src/parser/optimize.ts:255:38)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:79:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:77:55)

  ● Invoke JSONata with callback - return values › should handle a null value

    Failed: Unknown expression type: "(name)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at Object.ast_optimize (src/parser/optimize.ts:255:38)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:85:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:83:48)

  ● Invoke JSONata with callback - return values › should handle a value

    Failed: Unknown expression type: "(name)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at Object.ast_optimize (src/parser/optimize.ts:255:38)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:91:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:89:43)

  ● Invoke JSONata with callback - return values › should handle a promise

    Failed: Unknown expression type: "(name)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at Object.ast_optimize (src/parser/optimize.ts:255:38)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:97:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:95:45)

  ● Handle chained functions that end in promises › basic function that returns a thenable

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at Object.ast_optimize (src/parser/optimize.ts:159:47)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:125:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:123:60)

  ● Handle chained functions that end in promises › basic function that returns a thenable, but invokes another function

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:132:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:130:90)

  ● Handle chained functions that end in promises › basic function that returns a thenable, but invokes another function several times

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:139:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:137:104)

  ● Handle chained functions that end in promises › basic function that returns a thenable and part of a numeric expression

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at Object.ast_optimize (src/parser/optimize.ts:130:34)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:146:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:144:93)

  ● Handle chained functions that end in promises › basic function that returns a thenable, but invokes another function several times and part of a numeric expression

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at Object.ast_optimize (src/parser/optimize.ts:130:34)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:153:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:151:137)

  ● Handle chained functions that end in promises › basic function that returns a thenable, but invokes another function - nested

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:161:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:159:99)

  ● Handle chained functions that end in promises › basic function that returns a thenable, then invokes a built-in function

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:168:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:166:94)

  ● Handle chained functions that end in promises › basic function that returns a thenable, but invokes a non-existent function

    Failed: Unknown expression type: "(literal)"

      253 |                 return { type: "error", error: err };
      254 |             } else {
    > 255 |                 (err as any).stack = new Error().stack;
      256 |                 throw err;
      257 |             }
      258 |     }
      
      at ast_optimize (src/parser/optimize.ts:255:38)
      at src/parser/optimize.ts:160:24
      at Array.map (native)
      at ast_optimize (src/parser/optimize.ts:159:47)
      at ast_optimize (src/parser/optimize.ts:15:65)
      at Object.ast_optimize (src/parser/optimize.ts:15:65)
      at Object.parser (src/parser/parser.ts:560:12)
      at jsonata (src/jsonata.ts:33:15)
      at Suite.<anonymous> (__tests__/async-function.ts:175:20)
      at __tests__/async-function.ts:7:71
      at Object.<anonymous>.__awaiter (__tests__/async-function.ts:3:12)
      at Object.it (__tests__/async-function.ts:173:97)

FAIL __tests__/run-test-suite.ts (5.424s)
  ● JSONata Test Suite › Group: array-constructor › case001.json: [1]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case002.json: [1, 2]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case003.json: [1, 2,3]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case004.json: [1, 2, [3, 4]]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case005.json: [1, "two", ["three", 4]]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case006.json: [1, $two, ["three", $four]]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case007.json: ["foo.bar", foo.bar, ["foo.baz", foo.blah.baz]]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case008.json: [1, 2, 3][0]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case009.json: [1, 2, [3, 4]][-1]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case010.json: [1, 2, [3, 4]][-1][-1]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case011.json: foo.blah.baz.[fud, fud]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case012.json: foo.blah.baz.[[fud, fud]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case013.json: foo.blah.[baz].fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case014.json: foo.blah.[baz, buz].fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case015.json: [Address, Other."Alternative.Address"].City

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case016.json: [Address, Other.`Alternative.Address`].City

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case017.json: [0,1,2,3,4,5,6,7,8,9][$ % 2 = 0]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case018.json: [1, 2, 3].$

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case019.json: [1, 2, 3].$

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: array-constructor › case020.json: [1, 2, 3].$

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: blocks › case001.json: (1; 2; 3)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: blocks › case002.json: (1; 2; 3;)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: blocks › case003.json: ($a:=1; $b:=2; $c:=($a:=4; $a+$b); $a+$c)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: blocks › case004.json: Account.Order.Product.($var1 := Price ; $var2:=Quantity; $var1 * $var2)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: blocks › case005.json: (  $func := function($arg) {$arg.Account.Order[0].OrderID};  $func($))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: blocks › case006.json: (  $func := function($arg) {$arg.Account.Order[0]};  $func($).OrderID)

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case000.json: true

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case001.json: false

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case002.json: false or false

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case003.json: false or true

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case004.json: true or false

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case005.json: true or true

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case006.json: false and false

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case007.json: false and true

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case008.json: true and false

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case009.json: true and true

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case010.json: $not(false)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case011.json: $not(true)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case012.json: and=1 and or=2

    Got an unexpected exception: Unknown expression type: "and"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case013.json: and>1 or or<=2

    Got an unexpected exception: Unknown expression type: "and"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case014.json: and>1 or or!=2

    Got an unexpected exception: Unknown expression type: "and"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case015.json: and and and

    Got an unexpected exception: Unknown expression type: "and"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: boolean-expresssions › case016.json: $[].content.origin.$lowercase(name)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: closures › case000.json: Account.(  $AccName := function() { $."Account Name" };  Order[OrderID = "order104"].Product{    "Account": $AccName(),    "SKU-" & $string(ProductID): $."Product Name"  } )

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: closures › case001.json: Account.(  $AccName := function() { `Account Name` };  Order[OrderID = "order104"].Product{    "Account": $AccName(),    "SKU-" & $string(ProductID): `Product Name`  } )

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case000.json: 3>-3

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case001.json: 3>3

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case002.json: 3=3

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case003.json: "3"="3"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case004.json: "3"=3

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case005.json: "hello" = "hello"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case006.json: "hello" != "world"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case007.json: "hello" < "world"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case008.json: "32" < 42

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2009"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: comparison-operators › case009.json: null <= "world"

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2010"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: comparison-operators › case010.json: 3 >= true

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2010"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: comparison-operators › case011.json: foo.bar > bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case012.json: foo.bar >= bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case013.json: foo.bar<bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case014.json: foo.bar<=bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case015.json: bar>foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case016.json: bar < foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case017.json: foo.bar = bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case018.json: foo.bar!= bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case019.json: bar = foo.bar + 56

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case020.json: bar !=foo.bar + 56

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case021.json: foo.blah.baz[fud = "hello"]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case022.json: foo.blah.baz[fud != "world"]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case023.json: Account.Order.Product[Price > 30].Price

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: comparison-operators › case024.json: Account.Order.Product.Price[$<=35]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case000.json: ["Red"[$$="Bus"], "White"[$$="Police Car"]][0]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case001.json: ["Red"[$$="Bus"], "White"[$$="Police Car"]][0]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case002.json: ["Red"[$$="Bus"], "White"[$$="Police Car"]][0]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case003.json: $lookup({"Bus": "Red", "Police Car": "White"}, $$)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case004.json: $lookup({"Bus": "Red", "Police Car": "White"}, $$)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case005.json: $lookup({"Bus": "Red", "Police Car": "White"}, $$)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case006.json: Account.Order.Product.(Price < 30 ? "Cheap")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case007.json: Account.Order.Product.(Price < 30 ? "Cheap" : "Expensive")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: conditionals › case008.json: Account.Order.Product.(Price < 30 ? "Cheap" : Price < 100 ? "Expensive" : "Rip off")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: context › case000.json: $number()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: context › case001.json: [1..5].$string()

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: context › case002.json: [1..5].("Item " & $string())

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: context › case003.json: Account.Order.Product."Product Name".$uppercase().$substringBefore(" ")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case000.json: foo.**.blah

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case001.json: foo.**.baz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case002.json: foo.**.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case003.json: "foo".**.fud

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case004.json: foo.**."fud"

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case005.json: "foo".**."fud"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case006.json: foo.*.**.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case007.json: foo.**.*.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case008.json: Account.Order.**.Colour

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case009.json: foo.**.fud[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case010.json: (foo.**.fud)[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case011.json: (**.fud)[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case012.json: **.Price

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case013.json: **.Price[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case014.json: (**.Price)[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case015.json: **[2]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: descendent-operator › case016.json: Account.Order.blah.**

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: encoding › case000.json: $base64encode("hello:world")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: encoding › case001.json: $base64encode()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: encoding › case002.json: $base64decode("aGVsbG86d29ybGQ=")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: encoding › case003.json: $base64decode()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: errors › case000.json: "s" - 1

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2001"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case001.json: 1 + null

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2002"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case004.json: - "s"

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D1002"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case005.json: unknown(function)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1006"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case006.json: sum(Account.Order.OrderID)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1005"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case012.json: 2(blah)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1006"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case013.json: 2()

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1006"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case014.json: 3(?)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1008"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case015.json: 1=

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "S0207"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case016.json: function(x){$x}(3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "S0208"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case017.json: x:=1

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D2005"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case018.json: 2:=1

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D2005"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case019.json: $foo()

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1006"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case022.json: [1,2,3]{"num": $}[true]

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "S0209"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: errors › case023.json: [1,2,3]{"num": $}{"num": $}

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "S0210"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: fields › case000.json: foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: fields › case001.json: foo.blah

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: fields › case002.json: foo.blah.bazz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: fields › case003.json: foo.blah.baz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: fields › case004.json: foo.blah.baz.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: fields › case005.json: Other.Misc

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: fields › case006.json: bazz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: fields › case007.json: fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case000.json: Account.Order.[Product.Price]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case001.json: $.nest0

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case002.json: nest0

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case003.json: $[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case004.json: $[1]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case005.json: $[-1]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case006.json: $[0].nest0

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case007.json: $[1].nest0

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case008.json: $[0].nest0[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case009.json: nest0.[nest1.[nest2.[nest3]]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case010.json: nest0.nest1.[nest2.[nest3]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case011.json: nest0.[nest1.nest2.[nest3]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case012.json: nest0.[nest1.[nest2.nest3]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case013.json: nest0.[nest1.nest2.nest3]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case014.json: nest0.nest1.[nest2.nest3]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case015.json: nest0.nest1.nest2.[nest3]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case016.json: nest0.nest1.nest2.nest3

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case017.json: nest0.[nest1.[nest2.[nest3]]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case018.json: nest0.nest1.[nest2.[nest3]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case019.json: nest0.[nest1.nest2.[nest3]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case020.json: nest0.[nest1.[nest2.nest3]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case021.json: nest0.[nest1.nest2.nest3]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case022.json: nest0.nest1.[nest2.nest3]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case023.json: nest0.nest1.nest2.[nest3]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case024.json: nest0.nest1.nest2.nest3

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case025.json: {"a": 1 }.a

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case026.json: a

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case027.json: {"a": [1] }.a

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case028.json: a

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case029.json: {"a": [[1]] }.a

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case030.json: a

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case031.json: [{"a":[1,2]}, {"a":[3]}].a

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case032.json: a

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case033.json: [{"a":[{"b":[1]}, {"b":[2]}]}, {"a":[{"b":[3]}, {"b":[4]}]}].a[0].b

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case034.json: a[0].b

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case035.json: a.b[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case036.json: Phone[type="mobile"].number

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case037.json: Phone[type="mobile"][].number

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case038.json: Phone[][type="mobile"].number

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case039.json: Phone[type="office"][].number

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case040.json: Phone{type: number}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: flattening › case041.json: Phone{type: number[]}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-abs › case000.json: $abs(3.7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-abs › case001.json: $abs(-3.7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-abs › case002.json: $abs(0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-abs › case003.json: $abs(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-append › case000.json: $append([1,2], [3,4])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-append › case001.json: $append(1, [3,4])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-append › case002.json: $append(1,2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-append › case003.json: $append(1,notexist)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-append › case004.json: $append(notexist, [2,3,4])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case000.json: Account.Order[0].OrderID ~> $uppercase()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case001.json: Account.Order[0].OrderID ~> $uppercase() ~> $lowercase()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case002.json: Account.Order.OrderID ~> $join()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case003.json: Account.Order.OrderID ~> $join(", ")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case004.json: Account.Order.Product.(Price * Quantity) ~> $sum()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case005.json: ( $uppertrim := $trim ~> $uppercase;  $uppertrim("   Hello    World   ") )

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case006.json: "john@example.com" ~> $substringAfter("@") ~> $substringBefore(".") 

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case007.json: "" ~> $substringAfter("@") ~> $substringBefore(".") 

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case008.json: foo ~> $substringAfter("@") ~> $substringBefore(".") 

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case009.json: ( $domain := $substringAfter(?,"@") ~> $substringBefore(?,"."); $domain("john@example.com") )

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case010.json: ( $square := function($x){$x*$x}; [1..5] ~> $map($square) ) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case011.json: ( $square := function($x){$x*$x}; [1..5] ~> $map($square) ~> $sum() ) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case012.json: ($betweenBackets := $substringAfter(?, "(") ~> $substringBefore(?, ")");$betweenBackets("test(foo)bar")) 

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case013.json: ($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){$g($f($x))}};$instructions := [$sum, $square];$sumsq := $instructions ~> $reduce($chain);[1..5] ~> $sumsq()) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case014.json: ($square := function($x){$x*$x};$chain := λ($f, $g){λ($x){ $x ~> $f ~> $g }};$instructions := [$sum, $square, $string];$sumsq := $instructions ~> $reduce($chain);[1..5] ~> $sumsq()) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case015.json: ($square := function($x){$x*$x};$instructions := $sum ~> $square;[1..5] ~> $instructions())  

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case016.json: ($square := function($x){$x*$x};$sum_of_squares := $map(?, $square) ~> $sum;[1..5] ~> $sum_of_squares())  

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case017.json: ($times := λ($x, $y) { $x * $y };$product := $reduce(?, $times);$square := function($x){$x*$x};$product_of_squares := $map(?, $square) ~> $product;[1..5] ~> $product_of_squares())

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case018.json: ($square := function($x){$x*$x};[1..5] ~> $map($square) ~> $reduce(λ($x, $y) { $x * $y });)

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case019.json: ($prices := Account.Order.Product.Price;$quantities := Account.Order.Product.Quantity;$product := λ($arr) { $arr[0] * $arr[1] };$zip($prices, $quantities) ~> $map($product) ~> $sum())

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-applications › case020.json: 42 ~> "hello"

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2006"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-applications › case021.json: Account.Order.Product[$."Product Name" ~> /hat/i].ProductID

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-average › case000.json: $average(Account.Order.Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-average › case001.json: Account.Order.$average(Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-average › case002.json: Account.Order.(OrderID & ": " & $average(Product.(Price*Quantity)))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-average › case003.json: $average([])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-average › case004.json: $average([1,2,3])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-average › case005.json: $average(["1","2","3"])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-average › case006.json: $average(["1","2",3])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-average › case007.json: $average(1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-average › case008.json: $average([],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-average › case009.json: $average([1,2,3],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-average › case010.json: $average([],[],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-average › case011.json: $average([1,2],[],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-average › case012.json: $average(undefined)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case000.json: $boolean("Hello World")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case001.json: $boolean("")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case002.json: $boolean(true)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case003.json: $boolean(false)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case004.json: $boolean(0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case005.json: $boolean(10)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case006.json: $boolean(-0.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case007.json: $boolean(null)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case008.json: $boolean([])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case009.json: $boolean([0])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case010.json: $boolean([1])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case011.json: $boolean([1,2,3])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case012.json: $boolean([0,0])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case013.json: $boolean([[]])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case014.json: $boolean([[null]])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case015.json: $boolean([[[true]]])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case016.json: $boolean({})

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case017.json: $boolean({"hello":"world"})

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case018.json: $boolean(Account)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case019.json: $boolean(Account.Order.Product.Price)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case020.json: $boolean(Account.blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case021.json: $boolean($boolean)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case022.json: $boolean(function(){true})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-boolean › case023.json: $boolean(2,3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-ceil › case000.json: $ceil(3.7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-ceil › case001.json: $ceil(-3.7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-ceil › case002.json: $ceil(0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-ceil › case003.json: $ceil(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-clone › case000.json: $clone(foo)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-clone › case001.json: $clone({})

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-clone › case002.json: $clone({"a": 1})

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-contains › case000.json: $contains("Hello World", "lo")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-contains › case001.json: $contains("Hello World", "World")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-contains › case002.json: $contains("Hello World", "world")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-contains › case003.json: $contains("Hello World", "Word")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-contains › case004.json: $contains(nothing, "World")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-contains › case005.json: $contains(23, 3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-contains › case006.json: $contains("23", 3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-count › case000.json: $count(Account.Order.Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case001.json: Account.Order.$count(Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case002.json: Account.Order.(OrderID & ": " & $count(Product.(Price*Quantity)))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case003.json: $count([])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case004.json: $count([1,2,3])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case005.json: $count(["1","2","3"])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case006.json: $count(["1","2",3])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case007.json: $count(1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case008.json: $count([],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-count › case009.json: $count([1,2,3],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-count › case010.json: $count([],[],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-count › case011.json: $count([1,2],[],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-count › case012.json: $count(undefined)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-count › case013.json: $count([1,2,3,4]) / 2

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-each › case000.json: $each(Address, λ($v, $k) {$k & ": " & $v})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-each › case001.json: $reverse([1..5])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-each › case002.json: [[$], [$reverse($)], [$]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-each › case003.json: $reverse(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-each › case004.json: $reverse([1])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case000.json: $exists("Hello World")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case001.json: $exists("")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case002.json: $exists(true)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case003.json: $exists(false)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case004.json: $exists(0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case005.json: $exists(-0.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case006.json: $exists(null)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case007.json: $exists([])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case008.json: $exists([0])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case009.json: $exists([1,2,3])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case010.json: $exists([[]])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case011.json: $exists([[null]])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case012.json: $exists([[[true]]])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case013.json: $exists({})

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case014.json: $exists({"hello":"world"})

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case015.json: $exists(Account)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case016.json: $exists(Account.Order.Product.Price)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case017.json: $exists($exists)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case018.json: $exists(function(){true})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case019.json: $exists(blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case020.json: $exists(Account.blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case021.json: $exists(Account.Order[2])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case022.json: $exists(Account.Order[0].blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-exists › case023.json: $exists(2,3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-exists › case024.json: $exists()

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-floor › case000.json: $floor(3.7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-floor › case001.json: $floor(-3.7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-floor › case002.json: $floor(0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-floor › case003.json: $floor(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatBase › case000.json: $formatBase(100)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatBase › case001.json: $formatBase(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatBase › case002.json: $formatBase(100, 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatBase › case003.json: $formatBase(-100, 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatBase › case004.json: $formatBase(100, 36)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatBase › case005.json: $formatBase(99.5, 2.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatBase › case006.json: $formatBase(100, 1)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3100"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatBase › case007.json: $formatBase(100, 37)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3100"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case000.json: $formatNumber(12345.6, "#,###.00")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case001.json: $formatNumber(12345678.9, "9,999.99")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case002.json: $formatNumber(123412345678.9, "9,9,99.99")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case003.json: $formatNumber(1234.56789, "9,999.999,999")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case004.json: $formatNumber(123.9, "9999")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case005.json: $formatNumber(0.14, "01%")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case006.json: $formatNumber(0.4857,"###.###‰")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case007.json: $formatNumber(0.14, "###pm", {"per-mille": "pm"})

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case008.json: $formatNumber(-6, "000")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case009.json: $formatNumber(1234.5678, "00.000e0")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case010.json: $formatNumber(1234.5678, "00.000e000")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case011.json: $formatNumber(1234.5678, "①①.①①①e①", {"zero-digit": "⑟"})

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case012.json: $formatNumber(0.234, "0.0e0")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case013.json: $formatNumber(0.234, "#.00e0")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case014.json: $formatNumber(0.123, "#.e9")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case015.json: $formatNumber(0.234, ".00e0")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case016.json: $formatNumber(2392.14*(-36.58), "000,000.000###;###,###.000###")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case017.json: $formatNumber(2.14*86.58,"PREFIX##00.000###SUFFIX")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case018.json: $formatNumber(1E20,"#,######")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-formatNumber › case019.json: $formatNumber(20,"#;#;#")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3080"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case020.json: $formatNumber(20,"#.0.0")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3081"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case021.json: $formatNumber(20,"#0%%")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3082"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case022.json: $formatNumber(20,"#0‰‰")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3083"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case023.json: $formatNumber(20,"#0%‰")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3084"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case024.json: $formatNumber(20,".e0")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3085"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case025.json: $formatNumber(20,"0+.e0")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3086"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case026.json: $formatNumber(20,"0,.e0")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3087"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case027.json: $formatNumber(20,"0,")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3088"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case028.json: $formatNumber(20,"0,,0")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3089"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case029.json: $formatNumber(20,"0#.e0")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3090"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case030.json: $formatNumber(20,"#0.#0e0")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3091"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case031.json: $formatNumber(20,"#0.0e0%")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3092"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-formatNumber › case032.json: $formatNumber(20,"#0.0e0,0")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3093"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-fromMillis › case000.json: $fromMillis(1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-fromMillis › case001.json: $fromMillis(1509380732935)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-fromMillis › case002.json: $fromMillis(foo)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case000.json: $join("hello")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case001.json: $join(["hello"])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case002.json: $join(["hello", "world"])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case003.json: $join(["hello", "world"], ", ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case004.json: $join([], ", ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case005.json: $join(Account.Order.Product.Description.Colour, ", ")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case006.json: $join(Account.Order.Product.Description.Colour, no.sep)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case007.json: $join(Account.blah.Product.Description.Colour, ", ")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-join › case008.json: $join(true, ", ")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-join › case009.json: $join([1,2,3], ", ")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-join › case010.json: $join(["hello"], 3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-join › case011.json: $join()

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-keys › case000.json: $keys(Account)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-keys › case001.json: $keys(Account.Order.Product)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-keys › case002.json: $keys({})

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-keys › case003.json: $keys({"foo":{}})

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-keys › case004.json: $keys("foo")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-keys › case005.json: $keys(function(){1})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-keys › case006.json: $keys(["foo", "bar"])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case000.json: $length("")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case001.json: $length("hello")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case002.json: $length(missing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case003.json: $length("\u03BB-calculus")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case004.json: $length("\uD834\uDD1E")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case005.json: $length("𝄞")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case006.json: $length("超明體繁")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case007.json: $length("\t")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case008.json: $length("\n")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-length › case009.json: $length(1234)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-length › case010.json: $length(null)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-length › case011.json: $length(true)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-length › case012.json: $length(["str"])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-length › case013.json: $length()

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0411"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-length › case014.json: $length()

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0411"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-length › case015.json: $length("Hello", "World")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-lookup › case000.json: $lookup(Account, "Account Name")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-lookup › case001.json: $lookup(Account.Order.Product, "Product Name")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-lookup › case002.json: $lookup(Account.Order.Product.ProductID, "Product Name")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-lookup › case003.json: $lookup($$, "gust")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-lowercase › case000.json: $lowercase("Hello World")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-lowercase › case001.json: $lowercase(blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case000.json: $max(Account.Order.Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case001.json: Account.Order.$max(Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case002.json: Account.Order.(OrderID & ": " & $count(Product.(Price*Quantity)))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case003.json: $max([])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case004.json: $max([1,2,3])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case005.json: $max(["1","2","3"])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case006.json: $max(["1","2",3])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case007.json: $max(1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case008.json: $max([-1,-5])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case009.json: $max([],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case010.json: $max([1,2,3],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case011.json: $max([],[],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case012.json: $max([1,2],[],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case013.json: $max(undefined)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case014.json: $min(Account.Order.Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case015.json: Account.Order.$min(Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case016.json: Account.Order.(OrderID & ": " & $min(Product.(Price*Quantity)))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case017.json: $min([])

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case018.json: $min([1,2,3])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case019.json: $min(["1","2","3"])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case020.json: $min(["1","2",3])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case021.json: $min(1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-max › case022.json: $min([],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case023.json: $min([1,2,3],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case024.json: $min([],[],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case025.json: $min([1,2],[],[])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-max › case026.json: $min(undefined)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-merge › case000.json: $merge(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-merge › case001.json: $merge({"a":1})

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-merge › case002.json: $merge([{"a":1}, {"b":2}])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-merge › case003.json: $merge([{"a": 1}, {"b": 2, "c": 3}])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-merge › case004.json: $merge([{"a": 1}, {"b": 2, "a": 3}])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case000.json: $number(0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case001.json: $number(10)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case002.json: $number(-0.05)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case003.json: $number("0")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case004.json: $number("-0.05")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case005.json: $number("1e2")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case006.json: $number("1.0e-2")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case007.json: $number("1e0")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case008.json: $number("10e500")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3030"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case009.json: $number("Hello world")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3030"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case010.json: $number("1/2")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3030"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case011.json: $number("1234 hello")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3030"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case012.json: $number("")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3030"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case013.json: $number(true)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case014.json: $number(false)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case015.json: $number(Account.blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-number › case016.json: $number(null)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case017.json: $number([])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case018.json: $number("[1]")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3030"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case019.json: $number([1,2])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case020.json: $number(["hello"])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case021.json: $number(["2"])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case022.json: $number({})

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case023.json: $number({"hello":"world"})

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case024.json: $number($number)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case025.json: $number(function(){5})

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-number › case026.json: $number(1,2)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-pad › case000.json: $pad("foo", 5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-pad › case001.json: $pad("foo", -5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-pad › case002.json: $pad("foo", -5, "#")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-pad › case003.json: $pad("foo", 5, "")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-pad › case004.json: $pad("foo", 1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-pad › case005.json: $pad("foo", 8, "-+")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-pad › case006.json: $pad(nothing, 1)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-power › case000.json: $power(4, 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-power › case001.json: $power(4, 0.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-power › case002.json: $power(10, -2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-power › case003.json: $power(-2, 3)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-power › case004.json: $power(nothing, 3)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-power › case005.json: $power(-2, 1/3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3061"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-power › case006.json: $power(100, 1000)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3061"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-replace › case000.json: $replace("Hello World", "World", "Everyone")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-replace › case001.json: $replace("the cat sat on the mat", "at", "it")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-replace › case002.json: $replace("the cat sat on the mat", "at", "it", 0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-replace › case003.json: $replace("the cat sat on the mat", "at", "it", 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-replace › case004.json: $replace(nothing, "at", "it", 2)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-replace › case005.json: $replace("hello")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-replace › case006.json: $replace("hello", "l", "1", null)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-replace › case007.json: $replace("hello", "l", "1", -2)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3011"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-replace › case008.json: $replace("hello", 1)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-replace › case009.json: $replace("hello", "", "bye")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3010"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-replace › case010.json: $replace("hello", 2, 1)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-replace › case011.json: $replace(123, 2, 1)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-round › case000.json: $round(4)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case001.json: $round(2.3)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case002.json: $round(2.7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case003.json: $round(2.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case004.json: $round(3.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case005.json: $round(-0.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case006.json: $round(-0.3)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case007.json: $round(0.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case008.json: $round(-7.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case009.json: $round(-8.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case010.json: $round(4.49, 1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case011.json: $round(4.525, 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case012.json: $round(4.515, 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case013.json: $round(12345, -2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case014.json: $round(12450, -2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case015.json: $round(12350, -2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case016.json: $round(6.022e-23, 24)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-round › case017.json: $round(unknown)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-shuffle › case000.json: $count($shuffle([1..10]))

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-shuffle › case001.json: $sort($shuffle([1..10]))

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-shuffle › case002.json: $shuffle(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-shuffle › case003.json: $shuffle([1])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sift › case000.json: $sift(λ($v){$v.**.Postcode})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sift › case001.json: **[*].$sift(λ($v){$v.Postcode})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sift › case002.json: $sift(λ($v, $k){$k ~> /^A/})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sift › case003.json: $toMillis("1970-01-01T00:00:00.001Z")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sift › case004.json: $toMillis("2017-10-30T16:25:32.935Z")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sift › case005.json: $toMillis(foo)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sift › case006.json: $toMillis("foo")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3110"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case000.json: λ($arg)<b:b>{$not($arg)}(true)

    Got an unexpected exception: Syntax error: ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case001.json: λ($arg)<b:b>{$not($arg)}(foo)

    Got an unexpected exception: Syntax error: ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case002.json: λ($arg)<x:b>{$not($arg)}(null)

    Got an unexpected exception: Syntax error: ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case003.json: function($x,$y)<n-n:n>{$x+$y}(2, 6)

    Got an unexpected exception: Syntax error: ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case004.json: [1..5].function($x,$y)<n-n:n>{$x+$y}(6)

    Got an unexpected exception: Syntax error: ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case005.json: [1..5].function($x,$y)<n-n:n>{$x+$y}(2, 6)

    Got an unexpected exception: Syntax error: ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case006.json: Age.function($x,$y)<n-n:n>{$x+$y}(6)

    Got an unexpected exception: Syntax error: ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case007.json: λ($str)<s->{$uppercase($str)}("hello")

    Got an unexpected exception: The symbol ">" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case008.json: Account.Order.Product.Description.Colour.λ($str)<s->{$uppercase($str)}()

    Got an unexpected exception: The symbol ">" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case009.json: λ($str, $prefix)<s-s>{$prefix & $str}("World", "Hello ")

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case010.json: FirstName.λ($str, $prefix)<s-s>{$prefix & $str}("Hello ")

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case011.json: λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}("a")

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case012.json: λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a"])

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case013.json: λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}("a", "-")

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case014.json: λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a"], "-")

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case015.json: λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(["a", "b"], "-")

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case016.json: λ($arr, $sep)<as?:s>{$join($arr, $sep)}(["a", "b"], "-")

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case017.json: λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}([], "-")

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case018.json: λ($arr, $sep)<a<s>s?:s>{$join($arr, $sep)}(foo, "-")

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case019.json: λ($obj)<o>{$obj}({"hello": "world"})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case020.json: λ($arr)<a<a<n>>>{$arr}([[1]])

    Got an unexpected exception: The symbol ">" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case021.json: λ($num)<(ns)-:n>{$number($num)}(5)

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case022.json: λ($num)<(ns)-:n>{$number($num)}("5")

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case023.json: [1..5].λ($num)<(ns)-:n>{$number($num)}()

    Got an unexpected exception: The symbol ":" cannot be used as a unary operator

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case024.json: ($twice := function($f)<f:f>{function($x)<n:n>{$f($f($x))}};$add2 := function($x)<n:n>{$x+2};$add4 := $twice($add2);$add4(5))

    Got an unexpected exception: Expected ")", got ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case025.json: ($twice := function($f)<f<n:n>:f<n:n>>{function($x)<n:n>{$f($f($x))}};$add2 := function($x)<n:n>{$x+2};$add4 := $twice($add2);$add4(5))

    Got an unexpected exception: Expected ")", got ":"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-signatures › case026.json: λ($arg)<n<n>>{$arg}(5)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "S0401"
    Received:
      "S0211"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case027.json: λ($arg1, $arg2)<nn:a>{[$arg1, $arg2]}(1,"2")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0201"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case028.json: λ($arg1, $arg2)<nn:a>{[$arg1, $arg2]}(1,3,"2")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0201"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case029.json: λ($arg1, $arg2)<nn+:a>{[$arg1, $arg2]}(1,3, 2,"g")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0211"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case030.json: λ($arr)<a<n>>{$arr}(["3"]) 

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0211"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case031.json: λ($arr)<a<n>>{$arr}([1, 2, "3"]) 

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0211"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case032.json: λ($arr)<a<n>>{$arr}("f")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0211"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case033.json: ($fun := λ($arr)<a<n>>{$arr};$fun("f"))

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0211"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-signatures › case034.json: λ($arr)<(sa<n>)>>{$arr}([[1]])

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "S0402"
    Received:
      "S0211"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-sort › case000.json: $sort(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case001.json: $sort(1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case002.json: $sort([1,3,2])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case003.json: $sort([1,3,22,11])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case004.json: [[$], [$sort($)], [$]]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case005.json: $sort(Account.Order.Product.Price)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case006.json: $sort(Account.Order.Product."Product Name")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case007.json: $sort(Account.Order.Product)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3070"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-sort › case008.json: $sort(Account.Order.Product, function($a, $b) { $a.(Price * Quantity) > $b.(Price * Quantity) }).(Price & " x " & Quantity)

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case009.json: $sort(Account.Order.Product, function($a, $b) { $a.Price > $b.Price }).SKU

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sort › case010.json: 
                (Account.Order.Product
                  ~> $sort(λ($a,$b){$a.Quantity < $b.Quantity})
                  ~> $sort(λ($a,$b){$a.Price > $b.Price})
                ).SKU
            

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case000.json: $split("Hello World", " ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case001.json: $split("Hello", " ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case002.json: $split("Hello  World", " ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case003.json: $split("Hello", "")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case004.json: $sum($split("12345", "").$number($))

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case005.json: $split("a, b, c, d", ", ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case006.json: $split("a, b, c, d", ", ", 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case007.json: $split("a, b, c, d", ", ", 2.5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case008.json: $split("a, b, c, d", ", ", 10)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case009.json: $split("a, b, c, d", ", ", 0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case010.json: $split(nothing, " ")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-split › case011.json: $split("a, b, c, d", ", ", -3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3020"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-split › case012.json: $split("a, b, c, d", ", ", null)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-split › case013.json: $split("a, b, c, d", ", ", -5)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3020"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-split › case014.json: $split("a, b, c, d", ", ", "2")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-split › case015.json: $split("a, b, c, d", true)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-split › case016.json: $split(12345, 3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-split › case017.json: $split(12345)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-spread › case000.json: $spread("Hello World")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-spread › case001.json: $spread((Account.Order.Product.Description))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-spread › case002.json: $spread(blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-spread › case003.json: $string($spread(function($x){$x*$x}))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sqrt › case000.json: $sqrt(4)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sqrt › case001.json: $sqrt(2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sqrt › case002.json: $sqrt(nothing)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sqrt › case003.json: $sqrt(-2)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3060"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-string › case000.json: $string(5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case001.json: $string(22/7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case002.json: $string(1e100)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case003.json: $string(1e-100)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case004.json: $string(1e-6)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case005.json: $string(1e-7)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case006.json: $string(1e20)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case007.json: $string(1e21)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case008.json: Account.Order.$string($sum(Product.(Price* Quantity)))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case009.json: $string(true)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case010.json: $string(false)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case011.json: $string(null)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case012.json: $string(blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case013.json: $string($string)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case014.json: $string(function(){true})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case015.json: $string(function(){1})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case016.json: $string({"string": "hello"})

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case017.json: $string(["string", 5])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case018.json: $string({  "string": "hello",  "number": 78.8 / 2,  "null":null,  "boolean": false,  "function": $sum,  "lambda": function(){true},  "object": {    "str": "another",    "lambda2": function($n){$n}  },  "array": []})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-string › case019.json: $string(1/0)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3001"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-string › case020.json: $string({"inf": 1/0})

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D1001"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-string › case021.json: $string(2,3)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-string › case022.json: $string()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substring › case000.json: $substring("hello world", 0, 5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substring › case001.json: $substring("hello world", -5, 5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substring › case002.json: $substring("hello world", 6)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substring › case003.json: $substring(blah, 6)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringAfter › case000.json: $substringAfter("Hello World", " ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringAfter › case001.json: $substringAfter("Hello World", "l")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringAfter › case002.json: $substringAfter("Hello World", "f")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringAfter › case003.json: $substringAfter("Hello World", "ld")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringAfter › case004.json: $substringAfter(blah, "ld")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringBefore › case000.json: $substringBefore("Hello World", " ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringBefore › case001.json: $substringBefore("Hello World", "l")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringBefore › case002.json: $substringBefore("Hello World", "f")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringBefore › case003.json: $substringBefore("Hello World", "He")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-substringBefore › case004.json: $substringBefore(blah, "He")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sum › case000.json: $sum(Account.Order.Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sum › case001.json: Account.Order.$sum(Product.(Price * Quantity))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sum › case002.json: Account.Order.(OrderID & ": " & $sum(Product.(Price*Quantity)))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sum › case003.json: $sum()

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-sum › case004.json: $sum(1)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-sum › case005.json: $sum(Account.Order)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0412"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: function-sum › case006.json: $sum(undefined)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-trim › case000.json: $trim("Hello World")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-trim › case001.json: $trim("   Hello  
  	 World  	 ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-trim › case002.json: $trim()

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-uppercase › case000.json: $uppercase("Hello World")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-uppercase › case001.json: $uppercase(blah)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-zip › case000.json: $zip([1,2,3],[4,5,6])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-zip › case001.json: $zip([1,2,3],[4,5,6],[7,8,9])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-zip › case002.json: $zip([1,2,3],[4,5],[7,8,9])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-zip › case003.json: $zip([1,2,3])

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-zip › case004.json: $zip(1,2,3)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: function-zip › case005.json: $zip([1,2,3], [4,5,6], nothing)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: higher-order-functions › case000.json: ($twice:=function($f){function($x){$f($f($x))}}; $add3:=function($y){$y+3}; $add6:=$twice($add3); $add6(7))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: higher-order-functions › case001.json: λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n < 2 ? 1 : $n * $f($n - 1) } })(6)

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: higher-order-functions › case002.json: λ($f) { λ($x) { $x($x) }( λ($g) { $f( (λ($a) {$g($g)($a)}))})}(λ($f) { λ($n) { $n <= 1 ? $n : $f($n-1) + $f($n-2) } })(6) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-filter › case000.json: (library.books~>$filter(λ($v, $i, $a) {$v.price = $max($a.price)})).isbn

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-filter › case001.json: nothing~>$filter(λ($v, $i, $a) {$v.price = $max($a.price)})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-map › case000.json: (  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($data.one, $add) )  

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-map › case001.json: (  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $add := function($x){$x*$x};  $map($add) )  

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: hof-map › case002.json: $map([1,2,3], $string)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-map › case003.json: Account.Order.Product ~> $map(λ($prod, $index) { $index+1 & ": " & $prod."Product Name" })

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-map › case004.json: Account.Order.Product ~> $map(λ($prod, $index, $arr) { $index+1 & "/" & $count($arr) & ": " & $prod."Product Name" })

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-map › case005.json: $map(Phone, function($v, $i) {$i[$v.type="office"]})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-map › case006.json: $map(Phone, function($v, $i) {$v.type="office" ? $i})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-map › case007.json: $map(Phone, function($v, $i) {$v.type="office" ? $i: null})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-map › case008.json: $map(Phone, function($v, $i) {$v.type="office" ? $i: null})

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case000.json: (  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y})) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case001.json: (  $concat := function($s){function($a, $b){$string($a) & $s & $string($b)}};  $comma_join := $concat(' ... ');  $reduce([1,2,3,4,5], $comma_join))      

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case002.json: (  $seq := [1,2,3,4,5];  $reduce($seq, function($x, $y){$x+$y}, 2))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case003.json: (  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case004.json: (  $seq := 1;  $reduce($seq, function($x, $y){$x+$y}))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case005.json: $reduce(Account.Order.Product.Quantity, $append)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case006.json: $reduce(Account.Order.Product.Quantity, $append)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case007.json: ($product := function($a, $b) { $a * $b };$power := function($x, $n) { $n = 0 ? 1 : $reduce([1..$n].($x), $product) };[0..5].$power(2, $))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-reduce › case008.json: (  $seq := 1;  $reduce($seq, function($x){$x}))

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3050"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: hof-zip-map › case000.json: (  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $map($zip($data.one, $data.two), $sum)) 

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-zip-map › case001.json: (  $data := {    "one": [1,2,3,4,5],    "two": [5,4,3,2,1]  };  $data.$zip(one, two) ~> $map($sum)) 

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-zip-map › case002.json: (  $data := {    "one": [1],    "two": [5]  };  $data[].$zip(one, two) ~> $map($sum)) 

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: hof-zip-map › case003.json: (  $data := {    "one": 1,    "two": 5  };  $data[].$zip(one, two) ~> $map($sum)) 

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case000.json: 1 in [1,2]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case001.json: 3 in [1,2]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case002.json: "hello" in [1,2]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case003.json: "world" in ["hello", "world"]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case004.json: in in ["hello", "world"]

    Got an unexpected exception: Unknown expression type: "in"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case005.json: "world" in in

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case006.json: "hello" in "hello"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case007.json: library.books["Aho" in authors].title

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: inclusion-operator › case008.json: content.integration.$lowercase(name)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case000.json: function($x){$x*$x}(5)

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case001.json: function($x){$x>5 ? "foo"}(6)

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case002.json: function($x){$x>5 ? "foo"}(3)

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case003.json: ($factorial:= function($x){$x <= 1 ? 1 : $x * $factorial($x-1)}; $factorial(4))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case004.json: ($fibonacci := function($x){$x <= 1 ? $x : $fibonacci($x-1) + $fibonacci($x-2)}; [1,2,3,4,5,6,7,8,9].$fibonacci($))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case005.json: ($nth_price := function($n) { (Account.Order.Product.Price)[$n] }; $nth_price(1) )

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case006.json:             (              $even := function($n) { $n = 0 ? true : $odd($n-1) };              $odd := function($n) { $n = 0 ? false : $even($n-1) };              $even(82)            )

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case007.json:             (              $even := function($n) { $n = 0 ? true : $odd($n-1) };               $odd := function($n) { $n = 0 ? false : $even($n-1) };               $even(65) )

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case008.json:         (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(65)         )

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case009.json: (  $gcd := λ($a, $b){$b = 0 ? $a : $gcd($b, $a%$b) };  [$gcd(8,12), $gcd(9,12)])

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case010.json: (  $range := function($start, $end, $step) { (    $step:=($step?$step:1);    $start+$step > $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15))        

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: lambdas › case011.json: (  $range := function($start, $end, $step) { (      $step:=($step?$step:1);        $start+$step > $end ? $start : $append($start, $range($start+$step, $end, $step))   )};  $range(0,15,2))        

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case000.json: "hello"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case001.json: 'hello'

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case002.json: "Wayne's World"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case003.json: 42

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case004.json: -42

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case005.json: 3.14159

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case006.json: 6.022e23

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case007.json: 1.602E-19

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case009.json: "hello\tworld"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case010.json: "hello\nworld"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case011.json: "hello \"world\""

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case012.json: "C:\\Test\\test.txt"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case013.json: "\u03BB-calculus rocks"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: literals › case014.json: "𝄞"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: missing-paths › case000.json: fdf

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: missing-paths › case001.json: fdf.ett

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: missing-paths › case002.json: fdf.ett[10]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: missing-paths › case003.json: fdf.ett[vc > 10]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: missing-paths › case004.json: fdf.ett + 27

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: missing-paths › case005.json: $fdsd

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: multiple-array-selectors › case000.json: [1..10][[1..3,8,-1]]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: multiple-array-selectors › case001.json: [1..10][[1..3,8,5]]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: multiple-array-selectors › case002.json: [1..10][[1..3,8,false]]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: null › case000.json: null

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: null › case001.json: [null]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: null › case002.json: [null, null]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: null › case003.json: $not(null)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: null › case004.json: null = null

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: null › case005.json: null != null

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: null › case006.json: {"true": true, "false":false, "null": null}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case000.json: foo.bar + bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case001.json: bar + foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case002.json: foo.bar - bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case003.json: bar - foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case004.json: foo.bar * bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case005.json: bar * foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case006.json: foo.bar / bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case007.json: bar / foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case008.json: foo.bar % bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case009.json: bar % foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case010.json: bar + foo.bar * bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case011.json: foo.bar * bar + bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case012.json: 24 * notexist

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case013.json: notexist + 1

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: numeric-operators › case014.json: 1/(10e300 * 10e100) 

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D1001"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: numeric-operators › case015.json: "5" + "5"

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2001"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: numeric-operators › case016.json: - notexist

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case001.json: {"key": "value"}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case002.json: {"one": 1, "two": 2}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case003.json: {"one": 1, "two": 2}.two

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case004.json: {"one": 1, "two": {"three": 3, "four": "4"}}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case005.json: {"one": 1, "two": [3, "four"]}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case006.json: {"test": ()}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case007.json: blah.{}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case008.json: Account.Order{OrderID: Product."Product Name"}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case009.json: Account.Order.{OrderID: Product."Product Name"}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case010.json: Account.Order.Product{$string(ProductID): Price}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case011.json: Account.Order.Product{$string(ProductID): (Price)[0]}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case012.json: Account.Order.Product.{$string(ProductID): Price}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case013.json: Account.Order.Product{ProductID: "Product Name"}

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1003"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: object-constructor › case014.json: Account.Order.Product.{ProductID: "Product Name"}

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1003"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: object-constructor › case015.json: Account.Order{OrderID: $sum(Product.(Price*Quantity))}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case016.json: Account.Order.{OrderID: $sum(Product.(Price*Quantity))}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case017.json: Account.Order.Product{$."Product Name": Price, $."Product Name": Price}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case018.json: Account.Order.Product{`Product Name`: Price, `Product Name`: Price}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case019.json: Account.Order{  OrderID: {    "TotalPrice":$sum(Product.(Price * Quantity)),    "Items": Product."Product Name"  }}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case020.json: {  "Order": Account.Order.{      "ID": OrderID,      "Product": Product.{          "Name": $."Product Name",          "SKU": ProductID,          "Details": {            "Weight": Description.Weight,            "Dimensions": Description.(Width & " x " & Height & " x " & Depth)          }        },      "Total Price": $sum(Product.(Price * Quantity))    }}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case021.json: {  "Order": Account.Order.{      "ID": OrderID,      "Product": Product.{          "Name": `Product Name`,          "SKU": ProductID,          "Details": {            "Weight": Description.Weight,            "Dimensions": Description.(Width & " x " & Height & " x " & Depth)          }        },      "Total Price": $sum(Product.(Price * Quantity))    }}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: object-constructor › case022.json: Phone{type: $join(number, ", "), "phone":number}

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: parentheses › case000.json: foo.(blah).baz.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: parentheses › case001.json: foo.(blah.baz).fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: parentheses › case002.json: (foo.blah.baz).fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: parentheses › case003.json: foo.blah.(baz.fud)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: parentheses › case004.json: (foo.blah.baz.fud)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: parentheses › case005.json: (foo).(blah).baz.(fud)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: parentheses › case006.json: (foo.(blah).baz.fud)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: parentheses › case007.json: (4 + 2) / 2

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: partial-application › case000.json: (  $add := function($x, $y){$x+$y};  $add2 := $add(?, 2);  $add2(3))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: partial-application › case001.json: (  $add := function($x, $y){$x+$y};  $add2 := $add(2, ?);  $add2(4))

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: partial-application › case002.json: (  $firstn := $substring(?, 0, ?);  $first5 := $firstn(?, 5);  $first5("Hello World"))

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: partial-application › case003.json: substring(?, 0, ?)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1007"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: partial-application › case004.json: unknown(?)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1008"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: predicates › case000.json: nothing[x=6][y=3].number

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: predicates › case001.json: clues[x=6][y=3].number

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: predicates › case002.json: $[x=6][y=3].number

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: predicates › case003.json: Account.Order.Product[$lowercase(Description.Colour) = "purple"][0].Price

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: quoted-selectors › case000.json: foo."blah"

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: quoted-selectors › case001.json: foo."blah".baz.'fud'

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: quoted-selectors › case002.json: "foo"."blah"."baz"."fud"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: quoted-selectors › case003.json: foo."blah.baz"

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: quoted-selectors › case004.json: foo.`blah`

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: quoted-selectors › case005.json: foo.`blah`.baz.'fud'

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: quoted-selectors › case006.json: `foo`.`blah`.`baz`.`fud`

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: quoted-selectors › case007.json: foo.`blah.baz`

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case000.json: [0..9]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case001.json: [0..9][$ % 2 = 0]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case002.json: [0, 4..9, 20, 22]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case003.json: [5..2]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case004.json: [5..2, 2..5]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case005.json: [-2..2]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case006.json: [-2..2].($*$)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case007.json: [-2..blah]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case008.json: [blah..5, 3, -2..blah]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: range-operator › case009.json: [1.1 .. 5]

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2003"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: range-operator › case010.json: [1 .. 5.5]

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2004"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: regex › case000.json: $split("ababbxabbcc",/b+/)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case001.json: $split("ababbxabbcc",/b+/, 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case002.json: $split("ababbxabbcc",/d+/)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case003.json: $contains("ababbxabbcc",/ab+/)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case004.json: $contains("ababbxabbcc",/ax+/)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case005.json: Account.Order.Product[$contains($."Product Name", /hat/)].ProductID

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case006.json: Account.Order.Product[$contains($."Product Name", /hat/i)].ProductID

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case007.json: $replace("ababbxabbcc",/b+/, "yy")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case008.json: $replace("ababbxabbcc",/b+/, "yy", 2)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case009.json: $replace("ababbxabbcc",/b+/, "yy", 0)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case010.json: $replace("ababbxabbcc",/d+/, "yy")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case011.json: $replace("John Smith", /(\w+)\s(\w+)/, "$2, $1")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case012.json: $replace("265USD", /([0-9]+)USD/, "$$$1")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case013.json: $replace("265USD", /([0-9]+)USD/, "$w")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case014.json: $replace("265USD", /([0-9]+)USD/, "$0 -> $$$1")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case015.json: $replace("265USD", /([0-9]+)USD/, "$0$1$2")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case016.json: $replace("abcd", /(ab)|(a)/, "[1=$1][2=$2]")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case017.json: $replace("abracadabra", /bra/, "*")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case018.json: $replace("abracadabra", /a.*a/, "*")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case019.json: $replace("abracadabra", /a.*?a/, "*")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case020.json: $replace("abracadabra", /a/, "")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case021.json: $replace("abracadabra", /a(.)/, "a$1$1")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case022.json: $replace("abracadabra", /.*?/, "$1")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D1004"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: regex › case023.json: $replace("AAAA", /A+/, "b")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case024.json: $replace("AAAA", /A+?/, "b")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case025.json: $replace("darted", /^(.*?)d(.*)$/, "$1c$2")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case026.json: $replace("abcdefghijklmno", /(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)/, "$8$5$12$12$18$123")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case027.json: $replace("abcdefghijklmno", /xyz/, "$8$5$12$12$18$123")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case028.json: $replace("abcdefghijklmno", /ijk/, "$8$5$12$12$18$123")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case029.json: $replace("abcdefghijklmno", /(ijk)/, "$8$5$12$12$18$123")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case030.json: $replace("abcdefghijklmno", /ijk/, "$x")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case031.json: $replace("abcdefghijklmno", /(ijk)/, "$x$")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case032.json: Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { "foo" })

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case033.json: Account.Order.Product.$replace($."Product Name", /(h)(at)/i, function($match) { $uppercase($match.match) })

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case034.json: $replace("temperature = 68F today", /(-?\d+(?:\.\d*)?)F\b/, function($m) { ($number($m.groups[0]) - 32) * 5/9 & "C" })

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: regex › case035.json: Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { true })

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3012"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: regex › case036.json: Account.Order.Product.$replace($."Product Name", /hat/i, function($match) { 42 })

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "D3012"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: simple-array-selectors › case000.json: nest0.nest1[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case001.json: foo.blah[0].baz.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case002.json: foo.blah[1].baz.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case003.json: foo.blah[-1].bazz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case004.json: (foo.blah)[1].baz.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case005.json: foo.blah.baz.fud[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case006.json: foo.blah.baz.fud[-1]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case007.json: (foo.blah.baz.fud)[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case008.json: (foo.blah.baz.fud)[1]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case009.json: (foo.blah.baz.fud)[5 * 0.2]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case010.json: (foo.blah.baz.fud)[-1]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case011.json: (foo.blah.baz.fud)[-2]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case012.json: (foo.blah.baz.fud)[2-4]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case013.json: (foo.blah.baz.fud)[-(4-2)]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case014.json: (foo.blah.baz.fud)[$$.foo.bar / 30]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case015.json: foo.blah[0].baz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case016.json: foo.blah.baz[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case017.json: (foo.blah.baz)[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case018.json: $[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case019.json: $[1]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case020.json: $[-1]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case021.json: $[1][0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: simple-array-selectors › case022.json: $[1.1][0.9]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case000.json: Account.Order.Product.Price^($)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case001.json: Account.Order.Product.Price^(<$)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case002.json: Account.Order.Product.Price^(>$)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case003.json: Account.Order.Product^(Price).Description.Colour

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case004.json: Account.Order.Product^(Price).SKU

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case005.json: Account.Order.Product^(Price * Quantity).Description.Colour

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case006.json: Account.Order.Product^(Quantity, Description.Colour).Description.Colour

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case007.json: Account.Order.Product^(Quantity, >Description.Colour).Description.Colour

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case008.json: Account.Order.Product^(Price).SKU

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case009.json: Account.Order.Product^(Price).SKU

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case010.json: Account.Order.Product^(Price).SKU

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: sorting › case011.json: Account.Order.Product^(Price).SKU

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2007"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: sorting › case012.json: Account.Order.Product^(Price).SKU

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2008"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: sorting › case013.json: Account.Order.Product^(Price).SKU

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2008"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: string-concat › case000.json: "foo" & "bar"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case001.json: "foo"&"bar"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case002.json: foo.blah[0].baz.fud &foo.blah[1].baz.fud

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case003.json: foo.(blah[0].baz.fud & blah[1].baz.fud)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case004.json: foo.(blah[0].baz.fud & none)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case005.json: foo.(none.here & blah[1].baz.fud)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case006.json: [1,2]&[3,4]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case007.json: [1,2]&3

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case008.json: 1&2

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case009.json: 1&[2]

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case010.json: "hello"&5

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: string-concat › case011.json: "Prices: " & Account.Order.Product.Price

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: tail-recursion › case000.json:             (              $f := function($n){()};              $f(1)            ) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: tail-recursion › case001.json: (  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(99))             

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: tail-recursion › case002.json: (  $factorial := function($n){$n = 0 ? 1 : $n * $factorial($n - 1)};  $factorial(100))             

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "U1001"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: tail-recursion › case003.json: (  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(5)) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: tail-recursion › case004.json: (  $factorial := function($n){(    $iter := function($n, $acc) {      $n = 0 ? $acc : $iter($n - 1, $n * $acc)    };    $iter($n, 1)  )};  $factorial(150)) 

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: tail-recursion › case005.json: (  $inf := function($n){$n+$inf($n-1)};  $inf(5))

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "U1001"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: tail-recursion › case006.json: (  $inf := function(){$inf()};  $inf())

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "U1001"
    Received:
      "S0202"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: tail-recursion › case007.json:         (          $even := function($n) { $n = 0 ? true : $odd($n-1) };           $odd := function($n) { $n = 0 ? false : $even($n-1) };           $odd(6555)         )

    Got an unexpected exception: Expected ":", got "}"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case000.json: {'Order': Account.Order.{  'ID': OrderID,  'Product': Product.{    'SKU': ProductID,    'Details': {      'Weight': Description.Weight,      'Dimensions': Description.(Width & ' x ' & Height & ' x ' & Depth)    }  },  'Total Price': $sum(Product.(Price * Quantity))}}

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case001.json: 
        (
          $tempReadings := $count(state.tempReadings) = 5 ?
              [state.tempReadings[[1..4]], event.t] :
              [state.tempReadings, event.t];
        
          {
            "tempReadings": $tempReadings,
            "sumTemperatures": $sum($tempReadings),
            "avgTemperature": $average($tempReadings) ~> $round(2),
            "maxTemperature": $max($tempReadings),
            "minTemperature": $min($tempReadings)
          }
        )

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case002.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case003.json: foo

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case004.json: baz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case005.json: Foo

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case006.json: food

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case007.json: maz.rar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case008.json: jee.par.waa

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case009.json: foo

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case010.json: foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case011.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case012.json: bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case013.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case014.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case015.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case016.json: bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case017.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case018.json: bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case019.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case020.json: bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case021.json: bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case022.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case023.json: bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case024.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case025.json: bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case026.json: $

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case027.json: $lowercase(Salutation)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case028.json: $lowercase(敷)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case029.json: $lowercase(Español)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case030.json: $lowercase($."NI.Number")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case031.json: $lowercase("COMPENSATION IS : " & Employment."Executive.Compensation")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case032.json: "Hello"

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case033.json: $uppercase(Salutation)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case034.json: $uppercase("Hello World")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case035.json: $uppercase("鯵噂ソ竹")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case036.json: Employment.Name & " is happy"

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case037.json: Employment.Name & " is pleased to employ " & Salutation & " " & Surname

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case038.json: $uppercase("Hello " & Salutation & " " & Surname)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case039.json: $uppercase(Salutation & " " & Surname & " - has " & Cars & " registered cars")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case040.json: $uppercase(Employment.ContractType)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case041.json: $substringBefore("Hola", "l")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case042.json: $substringBefore("Hola", 'l')

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case043.json: $substringBefore("Hola", "Q")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case044.json: $substringBefore("Hola", "")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case045.json: $substringBefore("鯵噂ソ竹", "ソ")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case046.json: $substringAfter("Coca" & "Cola", "ca")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case047.json: $substringAfter(Salutation & " " & MiddleName &" " & Surname, MiddleName)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case048.json: $substringAfter(Salutation & " " & Employment.Role, Salutation)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case049.json: $substringAfter("Hola", 'l')

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case050.json: $substringAfter("Hola", "Q")

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case051.json: $lowercase(Employment.Role) & " (" & Employment.Role & ")"

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case052.json: Employment.Years & " years of employment"

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case053.json: $uppercase(Salutation & " " & Surname & " - has " & Employment.Years & " years of employment")

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case054.json: $substring(Employment.Role, 7,4)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case055.json: $substring(Employment.Role, -4,4)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case056.json: $substring("Hello World",Cars,5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case058.json: $unknown(Salutation)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1006"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case059.json: $decrypt(Salutation)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1006"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case060.json: Employment.authentication(Salutation)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T1006"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case061.json: $uppercase(Invalid)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case062.json: $uppercase(Employment.Invalid)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case063.json: $lowercase("Coca", "Cola")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case064.json: $lowercase(Salary)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case065.json: $lowercase(20)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case066.json: $lowercase(20.55)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case067.json: $lowercase(Employment)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case068.json: $lowercase(Qualifications)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case069.json: $uppercase("Coca", "Cola")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case070.json: $uppercase(Salary)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case071.json: $uppercase(28)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case072.json: $uppercase(20.55)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case073.json: $uppercase(Cars)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case074.json: $uppercase(Employment)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case075.json: $uppercase(Qualifications)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case076.json: $substringBefore("Coca" & "ca")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0411"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case077.json: $substringBefore(Salary,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case078.json: $substringBefore(22,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case079.json: $substringBefore(22.55,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case080.json: $substringBefore("22",2)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case081.json: $substringBefore("22.55",5)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case082.json: $substringBefore(Employment,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case083.json: $substringBefore(Qualifications,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case084.json: $substringAfter("Coca" & "ca")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0411"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case085.json: $substringAfter(Salary,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case086.json: $substringAfter(22,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case087.json: $substringAfter(22.55,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case088.json: $substringAfter("22",2)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case089.json: $substringAfter("22.55",5)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case090.json: $substringAfter(Employment,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case091.json: $substringAfter(Qualifications,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case092.json: $substring("Coca" & "ca", 2, 4, 5)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case093.json: $substring("Coca", "Mr", 4)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case094.json: $substring("Coca", 3, "Whoops")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case095.json: $substring(Salary,2,4)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case096.json: $substring("Hello","World",5)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case097.json: $substring("Hello",5,"World")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case098.json: $substring("Hello World",5.5,5)

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case099.json: $substring(Employment,"xx")

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case100.json: $substring(Qualifications,6,5)

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T0410"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transform › case101.json: detail.contents

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case102.json: detail.meta

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transform › case103.json: detail.meta

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case000.json: $ ~> |Account.Order.Product|{"Total":Price*Quantity},["Description", "SKU"]|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case001.json: Account.Order ~> |Product|{"Total":Price*Quantity},["Description", "SKU"]|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case002.json: $ ~> |Account.Order.Product|{"Total":Price*Quantity, "Price": Price * 1.2}|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case003.json: $ ~> |Account.Order.Product|{},"Description"|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case004.json: $ ~> |Account.Order.Product|nomatch,"Description"|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case005.json: $ ~> |(Account.Order.Product)[0]|{"Description":"blah"}|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case006.json: $ ~> |foo.bar|{"Description":"blah"}|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case007.json: Account ~> |Order|{"Product":"blah"},nomatch|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case008.json: foo ~> |foo.bar|{"Description":"blah"}|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case009.json: Account ~> |Order|5|

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2011"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transforms › case010.json: Account ~> |Order|{},5|

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2012"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: transforms › case011.json: Account ~> |Order|{"Product":"blah"},nomatch|

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: transforms › case012.json: ( $clone := 5; $ ~> |Account.Order.Product|{"blah":"foo"}| )

    expect(received).toEqual(expected)
    
    Expected value to equal:
      "T2013"
    Received:
      "S0206"

      67 |                         if (testcase.code) {
      68 |                             // See if we go the code we expected
    > 69 |                             expect(e.code).toEqual(testcase.code);
      70 |                             // If a token was specified, check for that too
      71 |                             if (testcase.hasOwnProperty("token")) {
      72 |                                 expect(e.code).toEqual(testcase.token);
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:69:44)

  ● JSONata Test Suite › Group: variables › case000.json: $price.foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case001.json: $price.foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case002.json: $var[1]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case003.json: $.foo.bar

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case004.json: $a := 5

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case005.json: $a := $b := 5

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case006.json: ($a := $b := 5; $a)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case007.json: ($a := $b := 5; $b)

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case008.json: ( $a := 5; $a := $a + 2; $a )

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case009.json: [1,2,3].$v

    Got an unexpected exception: Unknown expression type: "(literal)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case010.json: ( $foo := "defined"; ( $foo := nothing ); $foo )

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: variables › case011.json: ( $foo := "defined"; ( $foo := nothing; $foo ) )

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case000.json: foo.*

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case001.json: foo.*.baz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case002.json: foo.*.bazz

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case003.json: foo.*.baz.*

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case004.json: foo.*.baz.*

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case005.json: foo.*.baz.*

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case006.json: foo.*[0]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case007.json: *[type="home"]

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case008.json: Account[$$.Account."Account Name" = "Firefly"].*[OrderID="order104"].Product.Price

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

  ● JSONata Test Suite › Group: wildcards › case009.json: Account[$$.Account.`Account Name` = "Firefly"].*[OrderID="order104"].Product.Price

    Got an unexpected exception: Unknown expression type: "(name)"

      75 |                             // If we get here, something went wrong because an exception
      76 |                             // was thrown when we didn't expect one to be thrown.
    > 77 |                             throw new Error("Got an unexpected exception: " + e.message);
      78 |                         }
      79 |                     }
      80 |                     // If we managed to compile the expression...
      
      at Object.<anonymous> (__tests__/run-test-suite.ts:77:35)

Test Suites: 4 failed, 4 total
Tests:       1071 failed, 23 passed, 1094 total
Snapshots:   0 total
Time:        8.309s
Ran all test suites.
----------------|----------|----------|----------|----------|----------------|
File            |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |
----------------|----------|----------|----------|----------|----------------|
All files       |     37.1 |    23.31 |    26.89 |    36.86 |                |
 src            |    24.78 |    15.13 |    13.71 |    24.69 |                |
  constants.ts  |      100 |      100 |      100 |      100 |                |
  evaluate.ts   |     9.36 |     5.44 |     9.43 |     9.36 |... 5,1437,1439 |
  functions.ts  |    13.68 |        0 |     2.15 |    13.68 |... 0,1821,1824 |
  index.ts      |      100 |      100 |      100 |      100 |                |
  jsonata.ts    |    64.29 |       60 |       40 |    64.29 |... 123,126,127 |
  signatures.ts |    46.04 |    33.78 |    41.67 |    46.04 |... 307,312,314 |
  tokenizer.ts  |      100 |      100 |      100 |      100 |                |
  utils.ts      |    42.35 |    15.91 |       28 |    42.35 |... 247,248,249 |
 src/parser     |    82.29 |    68.98 |    90.24 |    82.06 |                |
  index.ts      |      100 |      100 |      100 |      100 |                |
  optimize.ts   |     64.8 |    56.96 |       80 |     64.8 |... 216,217,244 |
  parser.ts     |    92.81 |    85.71 |    96.67 |     92.7 |... 266,267,268 |
  tail_call.ts  |     6.25 |        0 |        0 |     6.25 |... 22,24,26,28 |
----------------|----------|----------|----------|----------|----------------|
Done in 10.06s.
